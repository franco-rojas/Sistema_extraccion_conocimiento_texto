 Hola a todos y bienvenidos a Codificando Bits, el lugar donde aprenderán todo acerca de la inteligencia artificial, el deep learning y la ciencia de los datos. Les recuerdo que si quieren ver más detalles pueden visitar mi sitio web codificando bits.com Hoy vamos a hablar de la Regresión Multiclase. Así que comencemos. En primer lugar miremos que eso en que consiste la Regresión Multiclase es un algoritmo que permite clasificar datos y esta clasificación la da en tres o más categorías. A eso se referencia la Regresión Multiclase. Si tenemos, recuerden que si tenemos dos categorías hablamos de una Regresión Binaria o Regresión Logística que vimos en un video anterior. Pero en este caso la Regresión Multiclase me permite clasificar los datos en tres o más categorías. En este ejemplo entonces vemos datos de entrada como un triángulo, un rayo, una estrella y un corazón y la idea del algoritmo de Regresión Multiclase es tomar esos datos de entrada y clasificarlo en una de esas cuatro posibles categorías. Vemos un ejemplo un poco más específico. Aquí les dibujo una serie de puntos. Cada uno de esos puntos está definido por dos características, x1 y x2. Y ven ustedes en la gráfica tres agrupaciones. Una de color rojo correspondiente a la categoría 0, una de color morado correspondiente a la categoría 1 y una de color gris correspondiente a la categoría 2. Es decir, tenemos en total tres categorías para este set de datos. ¿Qué es lo que idealmente haría el algoritmo de Regresión Multiclase con estos datos? Encontrar de forma automática estas fronteras de decisión, estas líneas que separan una categoría o una agrupación o una clase de la otra. Veamos cómo hace esto el algoritmo de Regresión Multiclase, cómo lo logra hacer de forma automática. Vemos acá el esquema general. Vamos a mirarlo ahora en detalle. En este esquema general tenemos los datos de entrada, x, cada uno de esos datos, como en la gráfica anterior, veíamos que tiene dos características. Y tenemos tres salidas. La salida y1 correspondiente a la categoría 0, y2 correspondiente a la categoría 1 y y3 correspondiente a la categoría 2. Tenemos tres posibles categorías de salida. Esencialmente lo que hace el algoritmo es tomar esos datos de entrada, esas características de entrada y hacer una transformación de los datos. ¿Cuántas veces se hace la transformación? Depende de las categorías que tengamos. En este caso tenemos tres categorías de salida y por tanto se hacen tres transformaciones. Las transformaciones después se convierten a un número o a una probabilidad y posteriormente se determina de todas estas tres probabilidades cuál es la más alta y se asigna la categoría correspondiente a ese dato de entrada. Este es el esquema general. Luego vemos que es similar a lo que ocurre con la regresión logística. Es decir, primero hay un proceso de transformación de los datos que permite hacer una separación inicial de esos datos para luego clasificarlos y después usamos una función de activación que es no lineal que en este caso se llama la función softmax. Veamos esto con un ejemplo más detallado. Supongamos que tenemos este dato de entrada x con dos características, con dos valores numéricos que lo caracterizan. Vamos a aplicar primero una transformación. Como son tres categorías tenemos que aplicar esta ecuación tres veces y vemos que en esta transformación se tiene la misma ecuación o la misma función usada en la regresión logística donde el valor x de entrada lo estamos multiplicando por unos coeficientes w y le estamos sumando un coeficiente b. Cómo se obtienen estos coeficientes? Se obtienen al igual que en la regresión logística por un proceso de entrenamiento donde se usa el gradiente descendente para minimizar una función de error que en este caso también al igual que en la regresión logística se llama la entropía cruzada. Entonces esos coeficientes se calculan de forma automática durante el entrenamiento. Miremos paso a paso entonces la transformación. Se toman los dos datos, las dos características del dato de entrada, se multiplican por dos coeficientes w calculados automáticamente durante el entrenamiento a eso se le suma este coeficiente calculado también de forma automática y eso nos da una cantidad numérica. Y esa transformación se hace tres veces para otros coeficientes w y b. Se obtienen entonces tres cantidades numéricas. Fíjense que estas tres cantidades numéricas no están normalizadas en el sentido de que la suma de ellas no es igual a uno. Evidentemente aquí si sumamos esos coeficientes el valor resultante va a ser mayor que uno. Para normalizar esos valores usamos una función que se llama softmax que ustedes ven acá definida en esta ecuación donde es evidente que es una función no lineal. Cómo hacemos entonces esa transformación de cada uno de los tres datos usando la función softmax. Pues tomamos el primer dato, calculamos su exponencial y el valor resultante lo dividimos entre la suma de la exponencial de los tres datos de entrada y eso nos da entonces una primera cantidad. Tomamos el segundo dato, calculamos la exponencial de ese segundo dato, lo dividimos entre la suma de las tres exponenciales, eso nos da otra cantidad y así con el tercer dato. Pues observamos que esos tres datos ya están normalizados y sumamos esas tres probabilidades el valor resultante va a ser muy cercano a uno. El siguiente paso es entonces con base en esas tres probabilidades determinar la categoría a la que pertenece este dato de entrada. Cómo se hace eso? Es muy sencillo, simplemente de las tres probabilidades determinamos cuál de ellas es más alta, en este caso la que aparece en esta posición y a esa entonces le asignamos la categoría del dato entrante, luego el vector de salida o el dato de salida de ese modelo softmax será un vector 0, 1, 0 donde el 0 me indica que el dato de entrada no corresponde a estas categorías y el 1 precisamente me indica que ese dato de entrada corresponde a la segunda categoría que teníamos nosotros definida inicialmente. Miremos finalmente cómo durante el entrenamiento, cómo varían estas fronteras de decisión, observen primero que esas fronteras de decisión son lineales al igual que en el caso de la regresión logística y que a medida que avanzan las iteraciones se van refinando esas fronteras de decisión hasta que la totalidad de los datos queda clasificada correctamente. Bien, esto ha sido todo, gracias por haberme acompañado y no olviden suscribirse al canal y visitar mi sitio web codificando bits.com. Hasta luego.
