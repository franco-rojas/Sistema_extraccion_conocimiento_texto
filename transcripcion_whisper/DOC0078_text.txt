 Imaginen por un momento que como yo son fanáticos de la comida italiana y en particular de la pizza, así que deciden aprender a prepararla. Buscan la mejor receta disponible, comienzan a practicar y con el tiempo logran ser unos expertos preparando pizzas. Y les gusta tanto que se animan a montar una pizzería. Pero acá se dan cuenta de que una cosa era preparar la pizza en casa y otra muy diferente es comenzar a venderla. Se dan cuenta de que necesitan un mejor horno, más materia prima, alguien que tome los pedidos y que haga las entregas. Así que deben aprender varias cosas adicionales para lograr pasar de la pizza casera a un negocio de producir y vender pizzas. Pero bueno, se estarán preguntando qué tiene que ver esto de la pizza con el Machine Learning. Y tiene que ver mucho si queremos trabajar en una empresa resolviendo problemas usando precisamente el Machine Learning. Y es que si sabemos los fundamentos es como saber preparar la pizza en casa, pero llevar un modelo a producción es como precisamente montar una pizzería. Y acá hay una idea súper importante, debemos aprender a llevar el modelo a producción. Y el Machine Learning Engineering es precisamente esto, es tomar un modelo desarrollado usando esos fundamentos del Machine Learning, llevarlo a un usuario final y lograr que este modelo se pueda actualizar periódicamente para garantizar que tenga siempre el desempeño esperado. Y para lograr esto debemos tener unas habilidades y unas herramientas menos científicas y un poco más técnicas. De algunas de estas herramientas ya hablamos en videos anteriores como Git, SQL o incluso el uso de plataformas como Docker. Pero la cosa va más allá de esas herramientas. Pues lo que vamos a ver ahora es un panorama completo de lo que es el Machine Learning Engineering, es decir, cómo tomar ese modelo y cuáles son las etapas que se requieren para llevarlo a una fase de producción. Vamos a hablar particularmente del despliegue del modelo o el deployment, del model service o el servicio, de cómo se hace el monitoreo y en qué consiste el mantenimiento de ese modelo. De hecho, el ingeniero o ingeniera de Machine Learning es básicamente un híbrido entre el científico de Machine Learning, que conoce temas como el análisis exploratorio, el preprocesamiento de datos y el desarrollo de modelos, y un ingeniero de software convencional, que conoce cómo diseñar, probar, desplegar y hacer el mantenimiento del software. Pero existe una diferencia fundamental entre esta ingeniería de software convencional y lo que hace el Machine Learning Engineering, y es que en la primera el software usualmente es estático y solo ocasionalmente requiere algunas actualizaciones. Sin embargo, en el Machine Learning Engineering tenemos un modelo dinámico, porque una vez en producción los datos cambiarán y por tanto el modelo deberá ser reentrenado para ajustarse a esos nuevos datos, o de lo contrario sufrirá de algo que se conoce como degradación, pero de esto hablaremos en detalle en un momento. Así que un ingeniero o ingeniera de Machine Learning tiene que ser capaz de prevenir este comportamiento, o al menos de detectarlo y tomar los correctivos necesarios para evitar esa degradación del modelo. Para entender qué es esto de la degradación del modelo, necesitamos tener claro cuál es el ciclo de vida de un proyecto de Machine Learning Engineering, así que partamos de un ejemplo real. Veamos cómo funciona un sistema desarrollado por Airbnb, la plataforma online que permite contactar propietarios de viviendas en alquiler con huéspedes que necesitan este alojamiento. Esta plataforma es capaz de extraer información relevante a partir de las imágenes de los inmuebles subidas por los usuarios de la plataforma. Una de las metas de Airbnb es hacer que el mismo negocio sea más eficiente y que sus productos sean mucho más fáciles de usar, y uno de los inconvenientes es que muchas de las propiedades listadas en la plataforma tienen una descripción dada por los propietarios que no coincide con las características físicas del inmueble, y como existen miles de propiedades ofertadas a través de la plataforma, para Airbnb es imposible visitar personalmente cada propiedad para verificar esta información, así que lo que le interesa a Airbnb es verificar de la forma más eficiente posible que la descripción que hacen los usuarios coincide con lo que realmente se encuentra en el inmueble, y aunque de entrada parece que esta necesidad no tiene nada que ver con el Machine Learning, si la analizamos un poco más en detalle, veremos que de hecho podríamos desarrollar un sistema de visión artificial de detección de objetos que analice las imágenes subidas por los propietarios y detecte automáticamente los objetos de interés, los servicios, el equipamiento y el mobiliario disponible en el inmueble. Si volvemos al ciclo de vida del proyecto de Machine Learning, podemos decir que la primera fase es tener claro el problema o la necesidad de la empresa, en este caso Airbnb. Si el problema puede ser resuelto a través del Machine Learning, podemos pasar a la segunda fase de este ciclo de vida del proyecto, la delimitación del problema en términos propios del Machine Learning, es decir que debemos definir el tipo de modelo a usar, la entrada y la salida y sus criterios de desempeño. En el caso de Airbnb este modelo se encargará de detectar los diferentes objetos presentes en la imagen con un alto nivel de confianza, su entrada será una imagen y la salida será una serie de etiquetas, estufa, nevera, cocina, mesa, sofá, etc. Y este nivel de confianza se medirá, por ejemplo, con la precisión media-media. Las fases 3, 4, 5 y 6 son las etapas convencionales de un proyecto de Machine Learning. Recolectar y preparar los datos, de ser necesario realizar una extracción de características, entrenar y evaluar el modelo. Y en el Machine Learning académico o de investigación, o para los que estén hasta ahora comenzando en el mundo del Machine Learning, hasta acá llegaría esta fase del proceso. Pero si llegamos hasta acá no estaríamos dando respuesta al problema de negocio planteado, es decir, ya sabríamos preparar la pizza pero nos faltaría montar la pizzería. Es decir que ahora tenemos que llevar el modelo a producción para que llegue al usuario final, que en este caso es el sitio web de Airbnb. Y acá es donde entran los elementos adicionales del Machine Learning Engineering. Para montar nuestra pizzería se requieren cuatro fases adicionales, el despliegue del modelo, llevarlo a un servicio e incluir una fase de monitoreo y una de mantenimiento. El despliegue consiste simplemente en poner a disposición del usuario final lo implementado en las fases anteriores. Mientras que el servicio implica permitir que ese sistema acepte solicitudes del usuario y las lleve al modelo para generar una predicción. Y este despliegue que usualmente se realiza a través de servicios en la nube, viene esencialmente en tres diferentes sabores. La primera forma es llevando el modelo y todas sus dependencias a una máquina virtual, para lo cual se pueden usar librerías como Flask o FastAPI, de las que voy a hablarles en próximos videos. De hecho el sistema de Airbnb se implementa precisamente usando este esquema. La segunda alternativa consiste en usar contenedores de aplicaciones. Si no saben lo que es un contenedor, los invito a ver el video sobre Docker, en donde les explico en detalle cómo funciona esta plataforma. Usualmente se usa Docker para crear y distribuir este contenedor. Y luego un orquestador, que es como un director de orquesta, de ahí el nombre, que se encarga de coordinar en la nube la interacción de todos los elementos del sistema. Uno de los orquestadores más usados es precisamente Kubernetes, del cual también hablaremos más adelante en otro video. Y la tercera alternativa es hacer un despliegue sin servidor o serverless. En este caso el modelo y el código asociado para recibir datos y realizar la predicción se almacenan en un archivo .zip, que luego se sube a un servicio de la nube como Lambda, de Amazon Web Services, de Microsoft Azure y de Google Cloud. También en un próximo video hablaremos de este esquema de despliegue más en detalle. En este caso la gran ventaja con respecto a las dos formas de despliegue anteriores es que no se tienen que aprovisionar recursos como servidores o máquinas virtuales, solo se tiene que pagar por el tiempo de cómputo, es decir, al momento de realizar la predicción con el modelo. Bien, y después del despliegue y servicio del modelo están las fases de monitoreo y mantenimiento. Y la razón de esto es un elemento fundamental de cualquier proyecto de Machine Learning, los datos están cambiando constantemente. De hecho si volvemos al sistema de detección de objetos de Airbnb, podremos ver que el modelo inicial fue entrenado con un set de datos específico. Sin embargo, la plataforma está en continuo movimiento y los usuarios continuamente estarán subiendo imágenes de sus inmuebles, así que no existe garantía alguna de que el modelo siga funcionando correctamente para esas nuevas imágenes. De hecho, esto es una constante en prácticamente todos los sistemas de Machine Learning. El modelo se va degradando con el tiempo, lo que quiere decir que sus predicciones van desmejorando porque los datos que se introducen al modelo van cambiando periódicamente. Entonces la fase de monitoreo se encarga de verificar que el desempeño del modelo se mantiene, teniendo en cuenta que los datos están cambiando constantemente. Si hay degradación del modelo, entra a jugar la fase de mantenimiento, que se encarga de recolectar nuevos datos y reentrenar el modelo para desplegarlo nuevamente y retomar el ciclo de producción del sistema. Y si revisamos nuevamente todo el ciclo de vida de nuestro proyecto de Machine Learning, veremos que en realidad las fases no se ejecutan secuencialmente, sino que por el contrario se trata de un proceso cíclico, pues si los datos cambian es muy probable que en alguna etapa del proceso tengamos que regresar por ejemplo a recolectar más datos, para luego reentrenar el modelo, validarlo y llevarlo nuevamente a producción y este proceso se debe repetir periódicamente para evitar la degradación del sistema. Así que como hemos visto son muchos los elementos adicionales a la creación del modelo los que se requieren para poderlo posteriormente desplegar en una fase de producción. Y estas habilidades y herramientas son más de tipo ingenieril que combinadas con los fundamentos básicos del Machine Learning son lo que dan origen precisamente a lo que se conoce como el Machine Learning Engineering. En los próximos videos comenzaremos a ver más en detalle cada una de estas fases y hablaremos de cosas como por ejemplo los servicios en la nube y de cómo se hacen el despliegue, el servicio, el monitoreo y el mantenimiento de estos sistemas. Por el momento esto es todo, no olviden darle un pulgar hacia arriba de me gusta al video, suscribirse al canal, les envío un saludo y nos vemos en el próximo video.
