 El surgimiento de los grandes modelos de lenguaje como GPT-4 o BART ha abierto recientemente la posibilidad de crear aplicaciones de inteligencia artificial capaces de interpretar el lenguaje natural y esto ha motivado a muchas personas a aprender a desarrollar este tipo de aplicaciones. Sin embargo, como se trata de un campo que se mueve vertiginosamente resulta muy difícil tener claros cuáles son los conceptos y las herramientas que debemos aprender para comenzar a desarrollar este tipo de aplicaciones. Así que en este vídeo les voy a sugerir una ruta de aprendizaje de lo que considero son los elementos mínimos que deberían aprender para poder comenzar a desarrollar aplicaciones usando estos grandes modelos de lenguaje. Pero antes de comenzar los invito a visitar codificandovids.com en donde encontrarán la Academia Online con cursos de inteligencia artificial, ciencia de datos y machine learning que les permitirán construir su carrera en estas áreas y todo por una suscripción mensual de tan solo 10 dólares. Así que listo, comencemos. Antes de ver la guía en detalle hagamos algunas aclaraciones. La primera de ellas es que la guía está organizada para lo que yo considero son dos tipos de desarrolladores. Un desarrollador nivel básico y un desarrollador nivel avanzado. El desarrollador básico es una persona que quiere comenzar a crear aplicaciones usando estos grandes modelos de lenguaje y que tiene conocimientos de programación, pero que desconoce los fundamentos técnicos y conceptuales de cómo funcionan en el fondo estos modelos. La ventaja en este caso es que la ruta de aprendizaje es más corta, pero la gran desventaja es que este desarrollador no estará preparado para entender los cambios que se vendrán con los nuevos modelos que vayan surgiendo progresivamente. Por otra parte, el desarrollador avanzado es una persona que no solo tiene los conocimientos de programación necesarios, sino también los principios conceptuales de cómo funcionan en el fondo los sistemas existentes que dan origen a estos modelos. La desventaja en este caso es que la ruta de aprendizaje es un poco más larga, pero la gran ventaja es que este tipo de desarrollador estará mucho mejor preparado para implementar aplicaciones con los nuevos modelos que vayan surgiendo. En la ruta de aprendizaje que van a poder descargar en formato PDF en el enlace que les dejo abajo en la descripción, he indicado con una estrella los elementos adicionales que considero debería aprender un desarrollador avanzado, mientras que los bloques que no contienen estrella son comunes para los dos perfiles. Y la segunda aclaración importante es que esta ruta la construí a partir de los avances que hemos tenido hasta este momento, es decir junio de 2023. Pero como este campo de los grandes modelos de lenguaje se mueve tan rápidamente, muy probablemente para el año 2024 actualizaré esta ruta de aprendizaje con los avances que tengamos hasta ese momento. Y la tercera aclaración es que esta ruta hace parte de una lista de reproducción acá en el canal, la cual iré alimentando poco a poco con varios elementos conceptuales y prácticos para la construcción de aplicaciones basadas en estos Large Language Models. Así que sin más preámbulos veamos cuál es esta ruta de aprendizaje. Comencemos con lo esencial que son todos los fundamentos de programación y conceptuales que cualquier desarrollador debería conocer para comenzar a desarrollar aplicaciones usando estos grandes modelos de lenguaje. El primer elemento es comenzar entendiendo qué son los grandes modelos de lenguaje, para lo cual les sugiero un video acá en el canal en donde explico en detalle este concepto. El segundo elemento es saber programar en Python, pues las interfaces para el desarrollo de aplicaciones están basadas precisamente en este lenguaje de programación. Acá en el canal podrán encontrar una ruta de aprendizaje que sugiero para este lenguaje de programación y en el sitio web de la Academia Online podrán encontrar además tres cursos para aprender a programar en Python, niveles básico, intermedio y avanzado. El tercer elemento es comprender conceptos y herramientas básicas de desarrollo web, pues la mayoría de las aplicaciones que podemos desarrollar con estos grandes modelos de lenguaje son precisamente a través de aplicativos web que podemos abrir desde cualquier navegador de internet. Entre estos se encuentran conceptos como las API REST, los procesos de autenticación y librerías de Python para el desarrollo rápido de aplicaciones web como Streamlight o Fast API. El cuarto elemento es entender varios conceptos básicos del procesamiento y generación del lenguaje natural, pues estos grandes modelos de lenguaje están precisamente construidos con este propósito, es decir que acá la idea es comprender en qué consisten tareas como la clasificación de texto, el clustering, el named entity recognition, que permite por ejemplo extraer información del texto escrito y la generación de texto entre otras. Y el quinto elemento que sugiero para los desarrolladores avanzados es comprender los conceptos y la implementación práctica de modelos de deep learning, especialmente los relacionados con las redes transformer y los modelos atencionales, que son la base de los grandes modelos de lenguaje existentes en la actualidad. Si les interesa en la academia online pueden encontrar un curso teórico práctico muy completo enfocado precisamente en este tema. Estas bases técnicas generales son conceptos muy sencillos que considero cualquier desarrollador debería tener claros, pues resultan esenciales cuando queremos construir aplicaciones usando estos grandes modelos de lenguaje. Entre estas bases técnicas tenemos el concepto de tokenización, que es la primera fase del procesamiento del texto por parte de estos modelos, los embeddings, que es la forma como los modelos representan numéricamente los tokens, y los conceptos de temperatura, top-K y top-P, que resultan claves al momento de la generación del texto, así como el concepto de ventanas de contexto, que determina esencialmente la cantidad de texto que puede procesar a la entrada y que puede generar a la salida cada uno de estos modelos. De cada uno de estos conceptos hablaré en detalle en próximos videos, que también van a encontrar en la lista de reproducción que les mencioné hace un momento. Esta parte de la ruta la sugiero únicamente para los desarrolladores avanzados, y aquí la idea es entender desde el punto de vista práctico y conceptual cómo funcionan los principales grandes modelos de lenguaje creados hasta el momento. Así que la idea es entender cómo funciona BERT, el primer gran modelo de lenguaje que existió y que fue creado por Google en 2018, y del cual hablo en detalle en un video que encontrarán acá en el canal, así como los diferentes modelos GPT creados por OpenAI, hasta llegar por supuesto al más reciente, GPT-4, y también entender cómo funciona el modelo Pawn de Google, junto con el uso del aprendizaje por refuerzo que ha permitido el desarrollo de las aplicaciones que más han llamado la atención en los últimos meses, como ChatGPT de OpenAI y BART de Google. De estas dos últimas aplicaciones hablaré en próximos videos que también encontrarán próximamente en esta lista de reproducción. Además, sugiero entender cómo funcionan varios de los modelos de código abierto, y aunque el panorama es inmenso, sugiero comenzar por ejemplo con Ljama, GPT-4ALL y Alpaca, así como algunas de sus variantes. Este tercer elemento de la ruta también está enfocado únicamente para los desarrolladores avanzados, y aquí la idea es entender cómo afinar estos grandes modelos de lenguaje. La idea de la afinación es sencilla, y consiste en tomar cualquiera de estos modelos pre-entrenados y reentrenarlo con un set de datos más pequeño para lograr especializarlo en una tarea o en una temática particular, usando lo que se conoce como la transferencia de aprendizaje. Esta afinación resulta útil cuando queremos contar con un modelo que genere respuestas de forma más rápida, lo que se conoce como un modelo de menor latencia, o para reducir la extensión del texto introducido por el usuario al momento de realizar consultas al modelo. De este proceso de afinación también hablaré en detalle en un próximo video que también era parte de esta playlist. El cuarto elemento de la ruta es una alternativa a la afinación que acabo de hacer, y se conoce como el prompt engineering, y este procedimiento busca ser algo similar a la afinación, es decir, que el modelo pre-entrenado funcione adecuadamente en una tarea para la cual no fue entrenado inicialmente. Sin embargo, en este caso no se requiere el reentrenamiento del modelo, y en su lugar lo que hacemos es usar técnicas que nos permitan escribir el texto que ingresamos al modelo con la estructura adecuada para lograr generar las respuestas adecuadas dependiendo del aplicativo que tengamos. La elección de la alternativa más adecuada, es decir, entre la afinación o el prompt engineering, dependerá del problema que queramos resolver o incluso de restricciones económicas, pues en general ambos procesos cuestan dinero, aunque de estos detalles también hablaré más adelante en otro video. Y habiendo completado las fases anteriores, en este punto ya estamos listos para comenzar a entender cómo funcionan las herramientas de software que se pueden utilizar para realizar consultas. Las herramientas de software que nos permitirán construir diferentes tipos de aplicaciones usando estos grandes modelos de lenguaje. Estamos hablando de las APIs, que esencialmente son herramientas de software que permiten que nuestra aplicación pueda conversar, es decir, enviar y recibir solicitudes a los grandes modelos pre-entrenados y disponibles en la nube, así como librerías de Python que permiten interconectar diferentes fases de procesamiento de los datos con los grandes modelos de lenguaje, para desarrollar una aplicación en particular. En este caso existen dos vertientes, las APIs de pago y las librerías de código abierto. En el caso de las APIs de pago, sugiero aprenderlas de OpenAI, y en el caso de las librerías de código abierto, sugiero a los desarrolladores avanzados aprender a usar Lankchain y las herramientas de Hogging Face. De ambos tipos de herramientas hablaré también más adelante en próximos videos. Y habiendo desarrollado todas estas habilidades de programación, de manejo de librerías, de manejo de herramientas de software, y conociendo todos los conceptos y herramientas técnicas de estos grandes modelos de lenguaje, ya estamos listos para comenzar a desarrollar diferentes tipos de aplicaciones. Y en este caso lo que sugiero es, primero identificar un problema a resolver, que guarde relación precisamente con el procesamiento del lenguaje natural, luego elegir uno de todos estos modelos que existen, así como cualquiera de las herramientas de software o herramientas de programación o librerías mencionadas anteriormente, y luego entonces construir una aplicación pensando precisamente en un usuario final. Y aquí existe un amplio abanico de áreas de aplicación. Se podrían desarrollar por ejemplo soluciones de búsqueda semántica que consisten en encontrar información en un texto relativamente extenso a partir de consultas realizadas usando el lenguaje natural. O el modelamiento de tópicos, donde lo que se busca es identificar y extraer automáticamente tópicos o grupos de temáticas a partir de una colección de documentos. Así como aplicaciones más conocidas como la síntesis de texto, y desde luego los chatbots, los asistentes virtuales, los agentes inteligentes o los sistemas de generación de contenido, a los cuales dedicaremos videos más adelante acá en el canal. Muy bien, espero que esta ruta que les acabo de compartir les sirva como punto de partida si están interesados en comenzar a desarrollar aplicaciones de procesamiento del lenguaje natural con estos grandes modelos de lenguaje. Realmente no resulta fácil consolidar una única ruta de aprendizaje. Pues como les he venido contando, este campo de los grandes modelos de lenguaje es muy, pero muy dinámico. Y cada semana estamos viendo nuevos desarrollos y nuevos modelos y diferentes tipos de aplicaciones. Sin embargo, en esta ruta están los elementos técnicos y conceptuales que considero esenciales y que además les darán las bases para poder estar a la par con los nuevos desarrollos que vayan apareciendo poco a poco. Recuerden que este video hace parte de una lista de reproducción de grandes modelos de lenguaje que van a encontrar acá en el canal y que esta lista la irá alimentando poco a poco, con contenido relacionado con los grandes modelos de lenguaje y con muchos elementos que acabo de mencionar precisamente acá en esta ruta de aprendizaje. Y también recuerden que pueden visitar la Academia Online de CodificandoVids.com en donde encontrarán cursos relacionados con muchos de estos temas que acabo de mencionar en esta ruta de aprendizaje, como por ejemplo la programación en Python o el curso Teórico Práctico de Deep Learning. Y no olviden dejarme acá abajo sus comentarios o dudas acerca de lo que acabo de contarles. Y si les gustó el video, los invito a compartirlo con todos sus amigos y conocidos para que me ayuden a llevar este contenido a cada vez más y más personas. Y también los invito a suscribirse al canal y activar la campanita para recibir notificaciones cada vez que publique un nuevo video. Por ahora esto es todo, les envío un saludo y nos vemos en el próximo video. ¡Suscríbete al canal!
