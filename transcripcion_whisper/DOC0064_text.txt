 ¿Qué es Kubernetes? Kubernetes viene de la palabra griega kibernitis, que significa gobernador, timonel o capital de un barco. Kubernetes es un sistema de orquestación de contenedores de código abierto, aunque quizá esta definición sea un poco abstracta, así que la analizaremos parte por parte. En primer lugar, es necesario saber qué es un contenedor. En un sistema operativo, un proceso se define como el conjunto formado por las instrucciones de un programa, su estado de ejecución y sus recursos asociados. A través del sistema operativo, el proceso tiene acceso a parte de los recursos físicos disponibles ofrecidos por el hardware. Normalmente, los procesos corriendo en un sistema operativo tienen visibilidad los unos sobre los otros. Un contenedor se define como un mecanismo por el cual un proceso o un conjunto de procesos que corren en un sistema operativo quedan aislados del resto del proceso. Además, cada contenedor contiene los ficheros y dependencias necesarias para que estos procesos se puedan ejecutar correctamente. Por eso, al empleo de contenedores se le conoce comúnmente como virtualización de nivel de sistema operativo. ¿Pero cuál es la diferencia entre un contenedor y una máquina virtual? En el modelo de virtualización tradicional, el hipervisor actúa como elemento intermedio entre las máquinas virtuales y el hardware del servidor físico. Cada máquina virtual contiene un sistema operativo, junto con los binarios, librerías y aplicaciones que ejecutan. El contenido de una máquina virtual puede empaquetarse en imágenes para facilitar su distribución. Sin embargo, en el caso de la virtualización de nivel de sistema operativo, solo se emplea un sistema operativo sobre el que corren los contenedores. Cada contenedor tiene acceso al núcleo del sistema operativo y utiliza los componentes comunes del mismo. Así, los contenedores son mucho más ligeros que las máquinas virtuales, pues el sistema operativo no va empaquetado en el contenedor y contiene exclusivamente las aplicaciones, las librerías y los binarios necesarios para su ejecución. Para que estos contenedores puedan ejecutarse sobre el sistema operativo, es necesaria una capa intermedia, el container runtime o container engine, que se encarga de ejecutar los contenedores. Existen varias implementaciones. Docker, Cryo o Rocket son algunas de las más utilizadas. Al igual que las máquinas virtuales, los contenedores se generan desde imágenes. Así, una vez generada una imagen, puede distribuirse fácilmente y ejecutarse en cualquier máquina con un container runtime. Cabe puntualizar que las imágenes de contenedores se almacenan en un tipo de repositorio específico, conocido como registro de imágenes. El container runtime descarga las imágenes a ejecutar desde estos registros. Ahora llega la gran pregunta. ¿Para qué necesitamos orquestación si ya tenemos un container runtime que se encarga de los contenedores? La respuesta es sencilla. En entornos productivos, en los que es necesario garantizar alta disponibilidad, se utilizan múltiples nodos o máquinas, cada una con su propio container runtime. En esta situación, surgen una serie de interrogantes. ¿Cómo garantizamos que los contenedores de un nodo pueden comunicarse con los de los demás? ¿Cómo sabe cada nodo qué contenedores corren en los demás nodos? ¿Cómo se decide el nodo en el que se va a ejecutar un contenedor específico? ¿Cómo garantizo que un contenedor se reinicie si falla? ¿Y si un nodo se queda sin espacio, cómo garantizo que los contenedores se ejecuten en otro nodo disponible? La respuesta a todas estas preguntas y muchas más es la misma. Kubernetes Kubernetes permite agregar grupos de nodos que ejecutan contenedores y gestionarlos de manera eficiente y sencilla. Además, proporciona capacidades ideales para aplicaciones cloud-native, como autoescalado, permitiendo escalar las aplicaciones y los nodos en función del tráfico, así como una arquitectura diseñada para proporcionar alta disponibilidad. Kubernetes Kubernetes Kubernetes A nivel de aplicación, Kubernetes proporciona servicios de balanceo de carga, service discovery, orquestación de almacenamiento, gestionando recursos a nivel de contenedores y monitorización del estado de salud de las aplicaciones en el cluster. Además, proporciona utilidades para automatizar los despliegues y rollbacks de las aplicaciones. Kubernetes Kubernetes Kubernetes Si quieres saber más acerca de Kubernetes, contenedores y cloud computing, no dudes en visitar cubesandclouds.com y spainclouds.com
